{namespace genrule}

/***/
{template .soyweb}
  {call buck.page}
    {param title: 'genrule()' /}
    {param prettify: true /}
    {param description}
      A rule that is used to generate files from a shell command. It must
      produce a single output file or folder.
    {/param}
    {param content}

{call buck.rule}
{param status: 'FROZEN' /}
{param overview}
  A <code>genrule()</code> is used to generate files from a shell
  command. It must produce a single output file or folder.
{/param}

{param args}

{call buck.arg}
  {param name: 'name' /}
  {param desc}
  The name of the genrule.
  {/param}
{/call}

{call genrule_common.srcs_arg /}

{call genrule_common.cmd_arg /}

{call genrule_common.bash_arg /}

{call genrule_common.cmd_exe_arg /}

{call genrule_common.out_arg /}

{call genrule_common.deps_arg /}

{call buck.visibility_arg /}

{/param} // args

{param examples}

This genrule() uses a Python script to derive a new
{sp}<code>AndroidManifest.xml</code> from an
{sp}<code>AndroidManifest.xml</code> in the source tree.

{literal}<pre class="prettyprint lang-py">
genrule(
  name = 'generate_manifest',
  srcs = [
    'AndroidManifest.xml',
  ],
  bash = 'python $(exe //python/android:basic_to_full) ' \
      '$SRCDIR/AndroidManifest.xml > $OUT',
  cmd_exe = 'python.exe $(exe //python/android:basic_to_full) ' \
      '%SRCDIR%\\AndroidManifest.xml > %OUT%',
  out = 'AndroidManifest.xml',
  deps = [
    '//python/android:basic_to_full',
  ]
)
</pre>{/literal}

{/param} // examples

{/call} // buck.rule

 {/param}
  {/call}
{/template}

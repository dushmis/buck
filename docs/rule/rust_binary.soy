{namespace rust_binary}

/***/
{template .soyweb}
  {call buck.page}
    {param title: 'rust_binary()' /}
    {param prettify: true /}
    {param description}
      A rust_binary() rule builds a native Rust executable.
    {/param}
    {param content}

{call buck.rule}
{param status: 'UNFROZEN' /}
{param overview}
<p>
  A rust_binary() rule builds a native executable from the supplied set of Rust source files
  and dependencies.
</p>
<p>
  {call rust_common.supported_language_version /}
</p>
{/param}

{param args}

{call buck.arg}
  {param name: 'name' /}
  {param desc}
  The name of the rule.
  {/param}
{/call}

{call rust_common.srcs_arg /}

{call rust_common.deps_arg /}

{call rust_common.features_arg /}

{call rust_common.rustc_flags_arg /}

{/param} // close args

{param examples}

{call rust_common.more_examples /}

{literal}<pre class="prettyprint lang-py">
rust_binary(
  name='greet',
  srcs=[
    'greet.rs',
  ],
  deps=[
    ':greeting',
  ],
)

rust_library(
  name='greeting',
  srcs=[
    'greeting.rs',
  ],
  deps=[
    ':join',
  ],
)

rust_library(
  name='join',
  srcs=[
    'join.rs',
  ],
)
</pre>{/literal}
{/param}

{/call} // close buck.rule

    {/param}
  {/call}
{/template}
